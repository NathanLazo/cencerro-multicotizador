generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id              String    @id @default(cuid())
  name            String
  user            String?
  email           String    @unique
  emailVerified   DateTime?
  image           String?
  password        String?
  accounts        Account[]
  sessions        Session[]
  accessGranted   Boolean   @default(false)
  isAdministrator Boolean   @default(false)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model estados_municipios {
  id            Int @id @default(autoincrement())
  estados_id    Int
  municipios_id Int

  @@unique([estados_id, municipios_id], map: "estados_id")
  @@index([municipios_id], map: "municipios_id_refs_id_6d8b23ec")
}

model municipios {
  id        Int    @id @default(autoincrement())
  municipio String @db.VarChar(100)
}

model Estado {
  id   Int    @id @default(autoincrement())
  name String
}
